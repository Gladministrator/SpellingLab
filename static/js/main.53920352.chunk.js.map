{"version":3,"sources":["components/MainMenu.module.scss","components/WordLists.tsx","components/Questions.tsx","components/WordGame/Buttons/Buttons.tsx","components/WordGame/WrongAnswers/WrongAnswers.tsx","components/WordGame/InputAnswer/InputAnswer.tsx","components/WordGame/NextQuestion/NextQuestion.tsx","components/WordGame/WordGame.tsx","components/MainMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/WordGame/WordGame.module.scss","components/WordGame/NextQuestion/NextQuestion.module.scss"],"names":["module","exports","categories","Animals","Questions","setWordCategory","setPlayers","players","setPoints","undefined","onClick","array","items","push","words","Buttons","animal","stateElements","setStateElements","setincorrectAsnwer","alphabutton","map","item","index","letter","toUpperCase","includes","char","split","toLowerCase","prev","handleClick","WrongAnswer","InputAnswer","valueref","useRef","ref","placeholder","current","value","handleEntry","alert","cx","classNames","bind","NextQuestionSass","NextQuestion","setNextButton","nextButton","setAnimal","wordCategory","nextWord","indexOf","useEffect","className","box","letters","WordGameSass","WordGame","points","useState","incorrectAsnwer","every","div","props","MainMenuSass","MainMenu","Player1","Player2","Player3","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.53920352.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__2b3go\",\"gamecontainer\":\"MainMenu_gamecontainer__3-goF\"};","interface ICategories {\r\n  Animals: string[];\r\n  \"Game Characters\": string[];\r\n}\r\n\r\nexport const categoryAnimals: string[] = [\r\n  \"Animals\",\r\n  \"Goose\",\r\n  \"Rat\",\r\n  \"Moose\",\r\n  \"Goat\",\r\n  \"Dolphin\",\r\n  \"Crocodile\",\r\n  \"Wolf\",\r\n  \"Bird\",\r\n];\r\n\r\nexport const categoryVideoGameCharacter: string[] = [\r\n  \"Game Characters\",\r\n  \"Mario\",\r\n  \"Luigi\",\r\n  \"Donkey Kong\",\r\n  \"Kirby\",\r\n  \"Princess Peach\",\r\n  \"Lucario\",\r\n  \"Pikachu\",\r\n  \"Samus\",\r\n];\r\n\r\nexport const categories: ICategories = {\r\n  Animals: categoryAnimals,\r\n  \"Game Characters\": categoryVideoGameCharacter,\r\n};\r\n","import { categories } from \"./WordLists\";\r\nimport { IQuestionsProps } from \"../types/types\";\r\nimport { ICategories } from \"../types/types\";\r\n\r\nfunction Questions({ setWordCategory, setPlayers, setPoints, players }: IQuestionsProps) {\r\n  function words() {\r\n    let array: JSX.Element[] = [];\r\n    for (let items in categories) {\r\n      array.push(\r\n        <button onClick={() => setWordCategory(categories[items as keyof ICategories])} key={items}>\r\n          {items}\r\n        </button>\r\n      );\r\n    }\r\n    return array;\r\n  }\r\n  return (\r\n    <div>\r\n      {players === undefined && (\r\n        <div>\r\n          <p>Select the number of players:</p>\r\n          <div>\r\n            <button onClick={() => setPlayers(1)}>1</button>\r\n            <button onClick={() => setPlayers(2)}>2</button>\r\n            <button onClick={() => setPlayers(3)}>3</button>\r\n            <button onClick={() => setPlayers(4)}>4</button>\r\n          </div>\r\n        </div>\r\n      )}\r\n      {players !== undefined && (\r\n        <div>\r\n          <p>Select the category</p>\r\n          <div>{words()}</div>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n","import { IButtonProps, IDivprops } from \"../../../types/types\";\r\n\r\nconst Buttons = ({ animal, stateElements, setStateElements, setincorrectAsnwer }: IButtonProps) => {\r\n  const alphabet = [\r\n    \"A\",\r\n    \"B\",\r\n    \"C\",\r\n    \"D\",\r\n    \"E\",\r\n    \"F\",\r\n    \"G\",\r\n    \"H\",\r\n    \"I\",\r\n    \"J\",\r\n    \"K\",\r\n    \"L\",\r\n    \"M\",\r\n    \"N\",\r\n    \"O\",\r\n    \"P\",\r\n    \"Q\",\r\n    \"R\",\r\n    \"S\",\r\n    \"T\",\r\n    \"U\",\r\n    \"V\",\r\n    \"W\",\r\n    \"X\",\r\n    \"Y\",\r\n    \"Z\",\r\n  ];\r\n  function handleClick(letter: string): void {\r\n    if (animal.toUpperCase().includes(letter)) {\r\n      let char = animal.split(\"\");\r\n      let array: IDivprops[] = [...stateElements];\r\n      char.map((item: string, index: number): IDivprops | boolean => {\r\n        return (\r\n          letter.toLowerCase() === item.toLowerCase() &&\r\n          (array[index] = (\r\n            <div key={index}>\r\n              <p>{animal[index]}</p>\r\n            </div>\r\n          ))\r\n        );\r\n      });\r\n      setStateElements(array);\r\n    } else {\r\n      setincorrectAsnwer((prev) => prev + 1);\r\n    }\r\n  }\r\n\r\n  const alphabutton = alphabet.map((item, index) => {\r\n    return (\r\n      <button onClick={() => handleClick(item)} key={index}>\r\n        {item}\r\n      </button>\r\n    );\r\n  });\r\n  return <div>{alphabutton}</div>;\r\n};\r\n\r\nexport default Buttons;\r\n","const WrongAnswer = () => {\r\n  return <div>&#10060;</div>;\r\n};\r\n\r\nexport default WrongAnswer;\r\n","import { useRef } from \"react\";\r\nimport { IDivprops } from \"../../../types/types\";\r\ninterface IProps {\r\n  animal: string;\r\n  setStateElements: React.Dispatch<React.SetStateAction<IDivprops[]>>;\r\n  setincorrectAsnwer: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst InputAnswer = ({ animal, setStateElements, setincorrectAsnwer }: IProps): JSX.Element => {\r\n  const valueref = useRef<HTMLInputElement>(null);\r\n\r\n  function handleClick(): void {\r\n    if (valueref.current) {\r\n      valueref.current.value !== \"\" ? handleEntry() : alert(\"Please enter a value\");\r\n    }\r\n  }\r\n\r\n  function handleEntry() {\r\n    if (animal.toLowerCase() === valueref.current?.value.toLowerCase()) {\r\n      setStateElements(\r\n        animal.split(\"\").map((letter, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <p>{letter}</p>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } else {\r\n      setincorrectAsnwer((prev) => prev + 1);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <input ref={valueref} placeholder={\"Enter Answer Here\"}></input>\r\n      <button onClick={handleClick}>Submit Answer</button>\r\n    </>\r\n  );\r\n};\r\nexport default InputAnswer;\r\n","import { IDivprops } from \"../../../types/types\";\r\nimport classNames from \"classnames/bind\";\r\nimport NextQuestionSass from \"./NextQuestion.module.scss\";\r\nimport { useEffect } from \"react\";\r\n\r\nlet cx = classNames.bind(NextQuestionSass);\r\n\r\ninterface IProps {\r\n  setStateElements: React.Dispatch<React.SetStateAction<IDivprops[]>>;\r\n  setincorrectAsnwer: React.Dispatch<React.SetStateAction<number>>;\r\n  animal: string;\r\n  setNextButton: React.Dispatch<React.SetStateAction<boolean>>;\r\n  nextButton: boolean;\r\n  setAnimal: React.Dispatch<React.SetStateAction<string>>;\r\n  wordCategory: string[];\r\n}\r\n\r\nconst NextQuestion = ({\r\n  setStateElements,\r\n  setincorrectAsnwer,\r\n  animal,\r\n  setNextButton,\r\n  nextButton,\r\n  setAnimal,\r\n  wordCategory,\r\n}: IProps) => {\r\n  const nextWord = () => {\r\n    setAnimal(wordCategory[wordCategory.indexOf(animal) + 1]);\r\n    setincorrectAsnwer(0);\r\n    setNextButton(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStateElements(() =>\r\n      animal.split(\"\").map((item, index) => {\r\n        return (\r\n          <div className={cx(NextQuestionSass.box)} key={index}>\r\n            <p className={cx(NextQuestionSass.letters)}>{item}</p>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  }, [animal]);\r\n  return (\r\n    <div>\r\n      {nextButton && <button onClick={nextWord}>Next Word</button>}\r\n      {!nextButton && <button onClick={nextWord}>SKIP</button>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NextQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IPoints, IDivprops, ICategory } from \"../../types/types\";\r\nimport WordGameSass from \"./WordGame.module.scss\";\r\nimport Buttons from \"./Buttons/Buttons\";\r\nimport WrongAnswer from \"./WrongAnswers/WrongAnswers\";\r\nimport InputAnswer from \"./InputAnswer/InputAnswer\";\r\nimport NextQuestion from \"./NextQuestion/NextQuestion\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nlet cx = classNames.bind(WordGameSass);\r\n\r\nexport interface IGameProps {\r\n  points: IPoints;\r\n  setPoints: (param: IPoints) => void;\r\n  players: number | undefined;\r\n  wordCategory: ICategory;\r\n}\r\n\r\nconst WordGame = ({ points, setPoints, players, wordCategory }: IGameProps) => {\r\n  const [incorrectAsnwer, setincorrectAsnwer] = useState<number>(0);\r\n  const [nextButton, setNextButton] = useState<boolean>(false);\r\n  const [animal, setAnimal] = useState<string>(wordCategory[1]);\r\n  const [stateElements, setStateElements] = useState<IDivprops[]>(\r\n    animal.split(\"\").map((letter, index) => {\r\n      return (\r\n        <div className={cx(WordGameSass.box)} key={index}>\r\n          <p className={cx(WordGameSass.letters)}></p>\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (stateElements.every((div) => div.props.className === undefined)) {\r\n      setNextButton(true);\r\n    }\r\n  }, [stateElements]);\r\n\r\n  return (\r\n    <div className={cx(\"main-container\")}>\r\n      <h1>The Category is {wordCategory[0]}</h1>\r\n      <div className={cx(\"lettercontainer\")}>{stateElements}</div>\r\n      <WrongAnswer />\r\n      {!nextButton && (\r\n        <Buttons\r\n          animal={animal}\r\n          stateElements={stateElements}\r\n          setStateElements={setStateElements}\r\n          setincorrectAsnwer={setincorrectAsnwer}\r\n        />\r\n      )}\r\n      {!nextButton && (\r\n        <InputAnswer\r\n          animal={animal}\r\n          setStateElements={setStateElements}\r\n          setincorrectAsnwer={setincorrectAsnwer}\r\n        />\r\n      )}\r\n      <>Incorrect Tries:{incorrectAsnwer}</>\r\n      <NextQuestion\r\n        setStateElements={setStateElements}\r\n        setincorrectAsnwer={setincorrectAsnwer}\r\n        animal={animal}\r\n        setNextButton={setNextButton}\r\n        nextButton={nextButton}\r\n        setAnimal={setAnimal}\r\n        wordCategory={wordCategory}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordGame;\r\n","import Questions from \"./Questions\";\r\nimport WordGame from \"./WordGame/WordGame\";\r\nimport { useState } from \"react\";\r\nimport { ICategory } from \"../types/types\";\r\nimport { IPoints } from \"../types/types\";\r\nimport classNames from \"classnames/bind\";\r\nimport MainMenuSass from \"./MainMenu.module.scss\";\r\n\r\nlet cx = classNames.bind(MainMenuSass);\r\n\r\nconst MainMenu = () => {\r\n  const [wordCategory, setWordCategory] = useState<ICategory>();\r\n  const [players, setPlayers] = useState<number | undefined>();\r\n  const [points, setPoints] = useState<IPoints>({ Player1: 0, Player2: 0, Player3: 0 });\r\n  return (\r\n    <div className={cx(\"MainMenu\")}>\r\n      <h1>Welcome to the spelling game</h1>\r\n      <div className={cx(\"gamecontainer\")}>\r\n        {wordCategory === undefined ? (\r\n          <Questions\r\n            setWordCategory={setWordCategory}\r\n            players={players}\r\n            setPlayers={setPlayers}\r\n            setPoints={setPoints}\r\n          />\r\n        ) : (\r\n          <WordGame\r\n            points={points}\r\n            setPoints={setPoints}\r\n            players={players}\r\n            wordCategory={wordCategory}\r\n          />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainMenu from \"./components/MainMenu\";\n\nfunction App() {\n  return (\n    <div className={\"appdiv\"}>\n      <MainMenu />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"WordGame_main-container__bZ8F_\",\"lettercontainer\":\"WordGame_lettercontainer__3LStp\",\"letters\":\"WordGame_letters__1aWae\",\"box\":\"WordGame_box__3l0Tt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letters\":\"NextQuestion_letters__TZ7CD\",\"box\":\"NextQuestion_box__Jg01K\"};"],"sourceRoot":""}