{"version":3,"sources":["components/WordGame/WordGame.module.scss","components/WordGame/NextQuestion/NextQuestion.module.scss","components/WordGame/Questions/Questions.module.scss","components/WordGame/Buttons/Buttons.module.scss","components/WordGame/WrongAnswers/WrongAnswers.module.scss","components/WordGame/InputAnswer/InputAnswer.module.scss","components/MainMenu.module.scss","components/WordLists.tsx","components/WordGame/Questions/Questions.tsx","components/WordGame/Buttons/Alphabet.tsx","components/WordGame/Buttons/Buttons.tsx","components/WordGame/WrongAnswers/WrongAnswers.tsx","components/WordGame/InputAnswer/InputAnswer.tsx","components/WordGame/NextQuestion/NextQuestion.tsx","components/WordGame/WordGame.tsx","components/MainMenu.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","categories","Animals","cx","classNames","bind","QuestionsCSS","Questions","setWordCategory","setText","className","array","items","push","onClick","words","alphabet","AlphabetCSS","Buttons","animal","stateElements","setStateElements","setincorrectAnswer","incorrectAnswer","refData","useRef","useState","map","item","index","handleClick","buttonState","setButtonState","letter","current","toUpperCase","includes","char","split","toLowerCase","prev","useEffect","disabled","WrongAnswerSass","WrongAnswer","xmarkpending","InputAnswerCSS","InputAnswer","valueref","handleEntry","value","ref","placeholder","alert","NextQuestionSass","NextQuestion","setNextButton","nextButton","setAnimal","wordCategory","box","letters","indexOf","WordGameSass","WordGame","text","change","setChange","every","div","undefined","props","id","MainMenuSass","MainMenu","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.870ad944.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"main-container\":\"WordGame_main-container__bZ8F_\",\"lettercontainer\":\"WordGame_lettercontainer__3LStp\",\"letters\":\"WordGame_letters__1aWae\",\"box\":\"WordGame_box__3l0Tt\",\"correct-answer\":\"WordGame_correct-answer__3C1aP\",\"firework\":\"WordGame_firework__1xrj8\",\"firework-element\":\"WordGame_firework-element__2xl-e\",\"firework1\":\"WordGame_firework1__1aPmq\",\"fireworkanimation\":\"WordGame_fireworkanimation__33hts\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"letters\":\"NextQuestion_letters__TZ7CD\",\"box\":\"NextQuestion_box__Jg01K\",\"skip-button\":\"NextQuestion_skip-button__3WMG2\",\"skip-text-container\":\"NextQuestion_skip-text-container__1FPdr\",\"text\":\"NextQuestion_text__2kGOm\",\"arrow\":\"NextQuestion_arrow__3H1CS\",\"next-button\":\"NextQuestion_next-button__1dLqt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"category-heading\":\"Questions_category-heading__6WFy8\",\"categories-container\":\"Questions_categories-container__3fvmV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"alphabet-container\":\"Buttons_alphabet-container__1xsbz\",\"letter\":\"Buttons_letter__2zOhm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"xmarkcontainer\":\"WrongAnswers_xmarkcontainer__2RNwH\",\"xmarkpending\":\"WrongAnswers_xmarkpending__7K_h_\",\"wrong-answer\":\"WrongAnswers_wrong-answer__2Y7oB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input-container\":\"InputAnswer_input-container__omSlp\",\"inputfield\":\"InputAnswer_inputfield__3vkes\",\"submit-button\":\"InputAnswer_submit-button__1r8WC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"MainMenu\":\"MainMenu_MainMenu__2b3go\",\"title-heading\":\"MainMenu_title-heading__1R-Zb\",\"gamecontainer\":\"MainMenu_gamecontainer__3-goF\"};","interface ICategories {\r\n  Animals: string[];\r\n  \"Game Characters\": string[];\r\n}\r\n\r\nexport const categoryAnimals: string[] = [\r\n  \"Animals\",\r\n  \"Goose\",\r\n  \"Rat\",\r\n  \"Moose\",\r\n  \"Goat\",\r\n  \"Dolphin\",\r\n  \"Crocodile\",\r\n  \"Wolf\",\r\n  \"Bird\",\r\n  \"Skunk\",\r\n  \"Mouse\",\r\n  \"Cheetah\",\r\n  \"Lion\",\r\n  \"Zebra\",\r\n  \"Panda\",\r\n];\r\n\r\nexport const categoryVideoGameCharacter: string[] = [\r\n  \"Game Characters\",\r\n  \"Mario\",\r\n  \"Luigi\",\r\n  \"Donkey Kong\",\r\n  \"Kirby\",\r\n  \"Princess Peach\",\r\n  \"Lucario\",\r\n  \"Pikachu\",\r\n  \"Samus\",\r\n];\r\n\r\nexport const categories: ICategories = {\r\n  Animals: categoryAnimals,\r\n  \"Game Characters\": categoryVideoGameCharacter,\r\n};\r\n","import { categories } from \"../../WordLists\";\r\nimport { IQuestionsProps } from \"../../../types/types\";\r\nimport { ICategories } from \"../../../types/types\";\r\nimport QuestionsCSS from \"./Questions.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nlet cx = classNames.bind(QuestionsCSS);\r\n\r\nfunction Questions({ setWordCategory, setText }: IQuestionsProps) {\r\n  function words() {\r\n    let array: JSX.Element[] = [];\r\n    for (let items in categories) {\r\n      array.push(\r\n        <button\r\n          onClick={() => {\r\n            setWordCategory(categories[items as keyof ICategories]);\r\n            setText(<h1>The Category is {items}</h1>);\r\n          }}\r\n          key={items}>\r\n          {items}\r\n        </button>\r\n      );\r\n    }\r\n    return array;\r\n  }\r\n  return (\r\n    <div>\r\n      <>\r\n        <h1 className={cx(\"category-heading\")}>Select a category</h1>\r\n        <div className={cx(\"categories-container\")}>{words()}</div>\r\n      </>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Questions;\r\n","import React from \"react\";\r\n\r\nexport const alphabet = [\r\n  \"A\",\r\n  \"B\",\r\n  \"C\",\r\n  \"D\",\r\n  \"E\",\r\n  \"F\",\r\n  \"G\",\r\n  \"H\",\r\n  \"I\",\r\n  \"J\",\r\n  \"K\",\r\n  \"L\",\r\n  \"M\",\r\n  \"N\",\r\n  \"O\",\r\n  \"P\",\r\n  \"Q\",\r\n  \"R\",\r\n  \"S\",\r\n  \"T\",\r\n  \"U\",\r\n  \"V\",\r\n  \"W\",\r\n  \"X\",\r\n  \"Y\",\r\n  \"Z\",\r\n];\r\n","import { IButtonProps, IDivprops } from \"../../../types/types\";\r\nimport AlphabetCSS from \"./Buttons.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\nimport { alphabet } from \"./Alphabet\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nlet cx = classNames.bind(AlphabetCSS);\r\n\r\nconst Buttons = ({\r\n  animal,\r\n  stateElements,\r\n  setStateElements,\r\n  setincorrectAnswer,\r\n  incorrectAnswer,\r\n}: IButtonProps) => {\r\n  const refData = useRef<Array<string>>([]);\r\n  const [buttonState, setButtonState] = useState<JSX.Element[]>(\r\n    alphabet.map((item, index) => {\r\n      return (\r\n        <button className={cx(\"letter\")} onClick={() => handleClick(item)} key={index}>\r\n          {item}\r\n        </button>\r\n      );\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    setButtonState(\r\n      alphabet.map((item, index) => {\r\n        if (refData.current.includes(item)) {\r\n          return (\r\n            <button className={cx(\"letter\")} disabled={true} key={index}>\r\n              {item}\r\n            </button>\r\n          );\r\n        } else {\r\n          return (\r\n            <button className={cx(\"letter\")} onClick={() => handleClick(item)} key={index}>\r\n              {item}\r\n            </button>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }, [stateElements, incorrectAnswer]);\r\n\r\n  function handleClick(letter: string): void {\r\n    refData.current.push(letter);\r\n    if (animal.toUpperCase().includes(letter)) {\r\n      let char = animal.split(\"\");\r\n      let array: IDivprops[] = [...stateElements];\r\n      char.map((item: string, index: number): IDivprops | boolean => {\r\n        return (\r\n          letter.toLowerCase() === item.toLowerCase() &&\r\n          (array[index] = (\r\n            <div key={index}>\r\n              <p>{animal[index]}</p>\r\n            </div>\r\n          ))\r\n        );\r\n      });\r\n      setStateElements(array);\r\n    } else {\r\n      setincorrectAnswer((prev) => prev + 1);\r\n    }\r\n  }\r\n\r\n  return <div className={cx(\"alphabet-container\")}>{buttonState}</div>;\r\n};\r\n\r\nexport default Buttons;\r\n","import classNames from \"classnames/bind\";\r\nimport WrongAnswerSass from \"./WrongAnswers.module.scss\";\r\nimport { IDivprops } from \"../../../types/types\";\r\nimport { useEffect } from \"react\";\r\nlet cx = classNames.bind(WrongAnswerSass);\r\n\r\ninterface IProps {\r\n  incorrectAnswer: number;\r\n  animal: string;\r\n  setStateElements: React.Dispatch<React.SetStateAction<IDivprops[]>>;\r\n  setText: React.Dispatch<React.SetStateAction<JSX.Element>>;\r\n}\r\n\r\nconst WrongAnswer = ({ incorrectAnswer, animal, setStateElements, setText }: IProps) => {\r\n  useEffect((): void => {\r\n    setStateElements(\r\n      animal.split(\"\").map((letter, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <p>{letter}</p>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n    incorrectAnswer > 6 && setText(<h1 className={cx(\"wrong-answer\")}>Wrong Answer!</h1>);\r\n  }, [incorrectAnswer > 6]);\r\n  return (\r\n    <div className={cx(\"xmarkcontainer\")}>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 1 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 2 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 3 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 4 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 5 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 6 })}>&#10060;</div>\r\n      <div className={cx({ xmarkpending: incorrectAnswer < 7 })}>&#10060;</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WrongAnswer;\r\n","import { useRef } from \"react\";\r\nimport { IDivprops } from \"../../../types/types\";\r\nimport InputAnswerCSS from \"./InputAnswer.module.scss\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nlet cx = classNames.bind(InputAnswerCSS);\r\n\r\ninterface IProps {\r\n  animal: string;\r\n  setStateElements: React.Dispatch<React.SetStateAction<IDivprops[]>>;\r\n  setincorrectAnswer: React.Dispatch<React.SetStateAction<number>>;\r\n}\r\n\r\nconst InputAnswer = ({ animal, setStateElements, setincorrectAnswer }: IProps): JSX.Element => {\r\n  const valueref = useRef<HTMLInputElement>(null);\r\n\r\n  const handleClick = (): void => {\r\n    if (valueref.current) {\r\n      valueref.current.value !== \"\" ? handleEntry() : alert(\"Please enter a value\");\r\n    }\r\n  };\r\n\r\n  const handleEntry = (): void => {\r\n    if (animal.toLowerCase() === valueref.current?.value.toLowerCase()) {\r\n      setStateElements(\r\n        animal.split(\"\").map((letter, index) => {\r\n          return (\r\n            <div key={index}>\r\n              <p>{letter}</p>\r\n            </div>\r\n          );\r\n        })\r\n      );\r\n    } else {\r\n      setincorrectAnswer((prev) => prev + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={cx(\"input-container\")}>\r\n      <input className={cx(\"inputfield\")} ref={valueref} placeholder={\"Enter Answer Here\"}></input>\r\n      <button className={cx(\"submit-button\")} onClick={handleClick}>\r\n        Submit Answer\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\nexport default InputAnswer;\r\n","import { IDivprops } from \"../../../types/types\";\r\nimport classNames from \"classnames/bind\";\r\nimport NextQuestionSass from \"./NextQuestion.module.scss\";\r\nimport { useEffect } from \"react\";\r\n\r\nlet cx = classNames.bind(NextQuestionSass);\r\n\r\ninterface IProps {\r\n  setStateElements: React.Dispatch<React.SetStateAction<IDivprops[]>>;\r\n  setincorrectAnswer: React.Dispatch<React.SetStateAction<number>>;\r\n  animal: string;\r\n  setNextButton: React.Dispatch<React.SetStateAction<boolean>>;\r\n  nextButton: boolean;\r\n  setAnimal: React.Dispatch<React.SetStateAction<string>>;\r\n  wordCategory: string[];\r\n  setText: React.Dispatch<React.SetStateAction<JSX.Element>>;\r\n}\r\n\r\nconst NextQuestion = ({\r\n  setStateElements,\r\n  setincorrectAnswer,\r\n  animal,\r\n  setNextButton,\r\n  nextButton,\r\n  setAnimal,\r\n  wordCategory,\r\n  setText,\r\n}: IProps) => {\r\n  const nextWord = () => {\r\n    setAnimal(wordCategory[wordCategory.indexOf(animal) + 1]);\r\n    setincorrectAnswer(0);\r\n    setNextButton(false);\r\n    setText(<h1>The Category is {wordCategory[0]}</h1>);\r\n  };\r\n\r\n  const skipWord = () => {\r\n    setincorrectAnswer(7);\r\n    setNextButton(true);\r\n    setText(<h1>The Answer Was:</h1>);\r\n    setStateElements(\r\n      animal.split(\"\").map((letter, index) => {\r\n        return (\r\n          <div key={index}>\r\n            <p>{letter}</p>\r\n          </div>\r\n        );\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    setStateElements(() =>\r\n      animal.split(\"\").map((item, index) => {\r\n        if (item === \" \") {\r\n          return (\r\n            <div key={index}>\r\n              <p> </p>\r\n            </div>\r\n          );\r\n        } else {\r\n          return (\r\n            <div className={cx(NextQuestionSass.box)} key={index}>\r\n              <p className={cx(NextQuestionSass.letters)}></p>\r\n            </div>\r\n          );\r\n        }\r\n      })\r\n    );\r\n  }, [animal]);\r\n  return (\r\n    <>\r\n      {nextButton && (\r\n        <button className={cx(\"next-button\")} onClick={nextWord}>\r\n          Next Word\r\n        </button>\r\n      )}\r\n      {!nextButton && (\r\n        <button className={cx(\"skip-button\")} onClick={skipWord}>\r\n          <div className={cx(\"skip-text-container\")}>\r\n            <div className={cx(\"text\")}>Skip Question</div>\r\n            <div className={cx(\"arrow\")}>&#10132;</div>\r\n          </div>\r\n        </button>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NextQuestion;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { IDivprops, ICategory } from \"../../types/types\";\r\nimport WordGameSass from \"./WordGame.module.scss\";\r\nimport Buttons from \"./Buttons/Buttons\";\r\nimport WrongAnswer from \"./WrongAnswers/WrongAnswers\";\r\nimport InputAnswer from \"./InputAnswer/InputAnswer\";\r\nimport NextQuestion from \"./NextQuestion/NextQuestion\";\r\nimport classNames from \"classnames/bind\";\r\n\r\nlet cx = classNames.bind(WordGameSass);\r\n\r\nexport interface IGameProps {\r\n  text: JSX.Element;\r\n  setText: React.Dispatch<React.SetStateAction<JSX.Element>>;\r\n  wordCategory: ICategory;\r\n}\r\n\r\nconst WordGame = ({ text, setText, wordCategory }: IGameProps) => {\r\n  const [incorrectAnswer, setincorrectAnswer] = useState<number>(0);\r\n  const [nextButton, setNextButton] = useState<boolean>(false);\r\n  const [animal, setAnimal] = useState<string>(wordCategory[1]);\r\n  const [change, setChange] = useState(1);\r\n\r\n  const [stateElements, setStateElements] = useState<IDivprops[]>(\r\n    animal.split(\"\").map((letter, index) => {\r\n      return (\r\n        <div className={cx(WordGameSass.box)} key={index}>\r\n          <p className={cx(WordGameSass.letters)}></p>\r\n        </div>\r\n      );\r\n    })\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (stateElements.every((div) => div.props.className === undefined)) {\r\n      setNextButton(true);\r\n\r\n      incorrectAnswer < 7 &&\r\n        setText(\r\n          <>\r\n            <h1 className={cx(\"correct-answer\")}>Good Job!</h1>\r\n            <div className={cx(\"firework\")} id=\"firework1\">\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n              <div className={cx(\"firework-element\")}></div>\r\n            </div>\r\n          </>\r\n        );\r\n    }\r\n  }, [stateElements]);\r\n\r\n  return (\r\n    <div className={cx(\"main-container\")}>\r\n      <>{text}</>\r\n      <div className={cx(\"lettercontainer\")}>{stateElements}</div>\r\n      {!nextButton && (\r\n        <WrongAnswer\r\n          incorrectAnswer={incorrectAnswer}\r\n          animal={animal}\r\n          setStateElements={setStateElements}\r\n          setText={setText}\r\n        />\r\n      )}\r\n      {!nextButton && (\r\n        <Buttons\r\n          key={change}\r\n          animal={animal}\r\n          stateElements={stateElements}\r\n          setStateElements={setStateElements}\r\n          incorrectAnswer={incorrectAnswer}\r\n          setincorrectAnswer={setincorrectAnswer}\r\n          setChange={setChange}\r\n        />\r\n      )}\r\n      {!nextButton && (\r\n        <InputAnswer\r\n          animal={animal}\r\n          setStateElements={setStateElements}\r\n          setincorrectAnswer={setincorrectAnswer}\r\n        />\r\n      )}\r\n      <NextQuestion\r\n        setStateElements={setStateElements}\r\n        setincorrectAnswer={setincorrectAnswer}\r\n        animal={animal}\r\n        setNextButton={setNextButton}\r\n        nextButton={nextButton}\r\n        setAnimal={setAnimal}\r\n        wordCategory={wordCategory}\r\n        setText={setText}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default WordGame;\r\n","import Questions from \"../components/WordGame/Questions/Questions\";\r\nimport WordGame from \"./WordGame/WordGame\";\r\nimport { useState } from \"react\";\r\nimport { ICategory } from \"../types/types\";\r\nimport classNames from \"classnames/bind\";\r\nimport MainMenuSass from \"./MainMenu.module.scss\";\r\n\r\nlet cx = classNames.bind(MainMenuSass);\r\n\r\nconst MainMenu = () => {\r\n  const [wordCategory, setWordCategory] = useState<ICategory>();\r\n  const [text, setText] = useState<JSX.Element>(<></>);\r\n  return (\r\n    <div className={cx(\"MainMenu\")}>\r\n      <h1 className={cx(\"title-heading\")}>Guess The Word</h1>\r\n      <div className={cx(\"gamecontainer\")}>\r\n        {wordCategory === undefined ? (\r\n          <Questions setWordCategory={setWordCategory} setText={setText} />\r\n        ) : (\r\n          <WordGame text={text} setText={setText} wordCategory={wordCategory} />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MainMenu;\r\n","import React from \"react\";\nimport \"./App.css\";\nimport MainMenu from \"./components/MainMenu\";\n\nfunction App() {\n  return (\n    <div className={\"appdiv\"}>\n      <MainMenu />\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}